package com.watterso.position;

import java.util.HashMap;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.hardware.Sensor;
import android.hardware.SensorManager;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Binder;
import android.os.IBinder;

public class DataService extends Service {
	private final IBinder mBinder = new DataBinder();
	private Intent mReceivedIntent;
	private boolean ScanAsFastAsPossible = false;
	public DataService() {
		IntentFilter i = new IntentFilter();
		i.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
		registerReceiver(new BroadcastReceiver() {
			public void onReceive(Context c, Intent i) {
				if (!WifiManager.SCAN_RESULTS_AVAILABLE_ACTION.equals(i
						.getAction()))
					return;
				WifiManager w = (WifiManager) c.getSystemService(Context.WIFI_SERVICE);
				Long time = System.nanoTime();
				HashMap<String, Integer> snapshot = new HashMap<String, Integer>();
				for (ScanResult res : w.getScanResults()) {
					snapshot.put(res.BSSID, res.level);
				}
				mWData.put(time, snapshot);
				if (ScanAsFastAsPossible)
					w.startScan();
				else {

				}
			}
		}, i);
		
		
		mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
		mLinearAcceleration = mSensorManager
				.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);
		mAccelerometer = mSensorManager
				.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
		mMagneticField = mSensorManager
				.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);

		mGravity = new float[3];
		mGeoMagnetic = new float[3];
		mLinearAcc = new float[3];
		mVData = new HashMap<Long, Float[]>();
		mWData = new HashMap<Long, HashMap<String,Integer>>();
	}

	@Override
	public IBinder onBind(Intent intent) {
		mReceivedIntent = intent;
		return mBinder;
	}
	public class DataBinder extends Binder{
		public DataService getService(){
			return DataService.this;
		}
	}
}
